<Window x:Class="ElBruno.ProjectOxford.FaceApiEmotionVisionSample.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ElBruno.ProjectOxford.FaceApiEmotionVisionSample"
        mc:Ignorable="d"
        Title="El Bruno - Analyze Faces"
        Height="768"
        Width="1024">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="100"></RowDefinition>
            <RowDefinition Height="50"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
            <RowDefinition Height="25"></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="512"></ColumnDefinition>
            <ColumnDefinition Width="256"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Background="Purple"
                    Orientation="Horizontal">
            <TextBlock Foreground="White"
                       FontSize="36"
                       VerticalAlignment="Center"
                       Margin="10"
                       Text="El Bruno - Project Oxford Samples"></TextBlock>
        </StackPanel>
        <Button x:Name="ButtonGetData"
                Grid.Row="1"
                HorizontalAlignment="Stretch"
                Margin="10"
                Click="ButtonGetData_Click"
                Content="Start Image Analysis" />
        <StackPanel Grid.Row="1"
                    Grid.Column="1"
                    Grid.ColumnSpan="2"
                    Orientation="Horizontal">
        <CheckBox x:Name="CheckBoxEmotions"
                  Margin="10"
                  FontSize="18"
                  HorizontalAlignment="Left"
                  IsChecked="True"
                  VerticalAlignment="Center">Emotions API</CheckBox>
            <CheckBox x:Name="CheckBoxVision"
                      Margin="10"
                      FontSize="18"
                      HorizontalAlignment="Left"
                      IsChecked="True"
                      VerticalAlignment="Center">Vision API</CheckBox>            
            <CheckBox x:Name="CheckBoxOcr"
                      Margin="10"
                      FontSize="18"
                      HorizontalAlignment="Left"
                      IsChecked="True"
                      VerticalAlignment="Center">OCR</CheckBox>
        </StackPanel>
        <Image HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Grid.Row="2"
               Margin="10"
               Height="{Binding MaxImageSize}"
               Width="{Binding MaxImageSize}"
               x:Name="ImageDisplay">
            <Image.Style>
                <Style TargetType="{x:Type Image}">
                    <Setter Property="Source"
                            Value="{Binding SelectedFile}" />
                </Style>
            </Image.Style>
        </Image>

        <StackPanel x:Name="StackPanelImageFaceFramesDetected"
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="10">
            <ItemsControl HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding ImagesFaceFrames}"
                          Panel.ZIndex="999"
                          Height="{Binding MaxImageSize}"
                          Width="{Binding MaxImageSize}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Height="{Binding MaxImageSize}"
                                Width="{Binding MaxImageSize}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left"
                                Value="{Binding Left}" />
                        <Setter Property="Canvas.Top"
                                Value="{Binding Top}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Rectangle Width="{Binding Width}"
                                       Height="{Binding Height}"
                                       Stroke="#FF26B8F4"
                                       StrokeThickness="1">
                            </Rectangle>
                            <TextBlock Text="{Binding ScoredEmotion}"
                                       Background="#FF26B8F4"
                                       Foreground="White"
                                       TextWrapping="WrapWithOverflow"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <StackPanel x:Name="StackPanelImageTextFramesDetected"
                    Grid.Row="2"
                    Grid.Column="0"
                    Margin="10">
            <ItemsControl HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          ItemsSource="{Binding ImagesTextFrames}"
                          Panel.ZIndex="999"
                          Height="{Binding MaxImageSize}"
                          Width="{Binding MaxImageSize}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Background="Transparent"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Height="{Binding MaxImageSize}"
                                Width="{Binding MaxImageSize}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Setter Property="Canvas.Left"
                                Value="{Binding Left}" />
                        <Setter Property="Canvas.Top"
                                Value="{Binding Top}" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Vertical">
                            <Rectangle Width="{Binding Width}"
                                       Height="{Binding Height}"
                                       Stroke="LightBlue"
                                       StrokeThickness="2">
                            </Rectangle>
                            <TextBlock Text="{Binding ScoredEmotion}"
                                       Background="#FF26B8F4"
                                       Foreground="White"
                                       TextWrapping="WrapWithOverflow"></TextBlock>
                        </StackPanel>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <StackPanel x:Name="StackPanelFaces"
                    Grid.Row="2"
                    Grid.Column="1"
                    Margin="10">
            <ListView HorizontalAlignment="Stretch"
                      VerticalAlignment="Stretch"
                      BorderBrush="Transparent"
                      ItemsSource="{Binding DetectedFaces}"
                      Margin="0">
                <ListView.Style>
                    <Style TargetType="ListView">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=Items.Count}"
                                         Value="0">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate />
                                    </Setter.Value>
                                </Setter>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ListView.Style>
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel MaxWidth="300" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid Margin="-3, 5, 5, 5">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="64" />
                                <ColumnDefinition Width="26" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Image Grid.Column="0"
                                   Grid.Row="0"
                                   Grid.RowSpan="3"
                                   Width="64"
                                   Height="64">
                                <Image.Source>
                                    <CroppedBitmap Source="{Binding ImagePath}"
                                                   SourceRect="{Binding UIRect}" />
                                </Image.Source>
                            </Image>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="1"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Text="{Binding Gender}" />
                            <TextBlock Grid.Column="2"
                                       Grid.Row="2"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top"
                                       Text="{Binding Age}" />
                            <TextBlock Grid.Column="2"
                                       Grid.Row="3"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Emotion: </Run>
                                <Run Text="{Binding ScoredEmotion}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="4"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Anger: </Run>
                                <Run Text="{Binding Scores.Anger}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="5"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Contempt: </Run>
                                <Run Text="{Binding Scores.Contempt}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="6"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Disgust: </Run>
                                <Run Text="{Binding Scores.Disgust}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="7"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Fear: </Run>
                                <Run Text="{Binding Scores.Fear}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="8"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Happiness: </Run>
                                <Run Text="{Binding Scores.Happiness}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="9"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Neutral: </Run>
                                <Run Text="{Binding Scores.Neutral}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="10"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Sadness: </Run>
                                <Run Text="{Binding Scores.Sadness}" />
                            </TextBlock>
                            <TextBlock Grid.Column="2"
                                       Grid.Row="11"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Top">
                                <Run>Surprise: </Run>
                                <Run Text="{Binding Scores.Surprise}" />
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter Property="Background"
                                        Value="Transparent" />
                            </Trigger>
                        </Style.Triggers>
                        <Setter Property="Focusable"
                                Value="False" />
                        <Setter Property="Background"
                                Value="Transparent" />
                        <Setter Property="HorizontalContentAlignment"
                                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="VerticalContentAlignment"
                                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                        <Setter Property="Padding"
                                Value="0" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border x:Name="Bd"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Background="{TemplateBinding Background}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected"
                                                 Value="true">
                                            <Setter Property="Background"
                                                    TargetName="Bd"
                                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                        </Trigger>
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsSelected"
                                                           Value="true" />
                                                <Condition Property="Selector.IsSelectionActive"
                                                           Value="false" />
                                            </MultiTrigger.Conditions>
                                            <Setter Property="Background"
                                                    TargetName="Bd"
                                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}" />
                                        </MultiTrigger>
                                        <Trigger Property="IsEnabled"
                                                 Value="false">
                                            <Setter Property="Foreground"
                                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
            </ListView>

        </StackPanel>

        <ScrollViewer Grid.Row="2"
                      Grid.Column="2"
                      Margin="10">
            <TextBlock TextWrapping="Wrap"
                       Text="{Binding ImageAnalysis}"></TextBlock>
        </ScrollViewer>

        <TextBlock Grid.Row="3"
                   Grid.ColumnSpan="3"
                   Grid.Column="0"
                   Margin="10"
                   Text="{Binding StatusInformation}"></TextBlock>
    </Grid>
</Window>
